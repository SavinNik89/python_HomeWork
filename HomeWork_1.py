#*********************************************************************************************************
# 1. Сформировать список из N членов последовательности.
# Для N = 5: 1, -3, 9, -27, 81 и т.д.

quantity = int(input('Введите количество элементов последовательности: '))
start_element = 1
element = start_element
sequence = [start_element]
count = 0
while count < quantity:
    element = element*(-3)
    sequence.append(element)
    count = count+1
print(sequence)

#***********************************************************************************************************
# 2. Для натурального n создать словарь индекс-значение, состоящий из элементов последовательности 3n + 1.
# Для n = 6: {1: 4, 2: 7, 3: 10, 4: 13, 5: 16, 6: 19}

quantity = int(input("Введите натуральное число N: "))
if quantity<=0:
    print('Число должно быть натуральным!')
else:
    index = list(range(1, quantity+1))
    value = []
    val = 0
    for num in index:
        val = 3*num+1
        value.append(val)
    result = dict(zip(index, value))
    print(result)

#**************************************************************************************************
# 3.Пользователь задаёт две строки. Определить количество вхождений одной строки в другой.

string_1 = input('Введите строку 1: ')
string_2 = input('Введите строку 2: ')
print (f'Количество вхождений строки 2 в строку 1: {string_1.count(string_2)}')
print (f'Количество вхождений строки 1 в строку 2: {string_2.count(string_1)}')

#*************************************************************************************************
# 4. Подсчитать сумму цифр в вещественном числе.

nums = input('Введите вещественное число: ')
print(f'Введенное число: {nums}')
digits = list(nums)
dot = digits.count('.')
com = digits.count(',')
if dot>0:
    digits.remove('.')
if com>0:
    digits.remove(',')
sum_list = [int(elem) for elem in digits]
print(f'Сумма цифр в числе: {sum(sum_list)}')

#***************************************************************************************
# 5. Написать программу получающую набор произведений чисел от 1 до N.
# Пример: пусть N = 4, тогда [ 1, 2, 6, 24 ]
import math

quantity = int(input("Введите натуральное число N: "))
i = 1
mult = 1
while i <= quantity:
    mult *= i
    i += 1
print(f'{quantity}!= {mult}')

#print(f'{quantity}!= {math.factorial(quantity)}') #проверка встроеной функцией

#********************************************************************************************************
#6. Написать функцию write_in_morse, которая принимает строку на английском языке и возвращает ее перевод
# на символьный язык Морзе. Ввод не должен зависеть от регистра.
#Да поможет вам этот словарь:

char_to_dots = \
    {
  'A': '.-', 'B': '-...', 'C': '-.-.', 'D': '-..', 'E': '.', 'F': '..-.',
  'G': '--.', 'H': '....', 'I': '..', 'J': '.---', 'K': '-.-', 'L': '.-..',
  'M': '--', 'N': '-.', 'O': '---', 'P': '.--.', 'Q': '--.-', 'R': '.-.',
  'S': '...', 'T': '-', 'U': '..-', 'V': '...-', 'W': '.--', 'X': '-..-',
  'Y': '-.--', 'Z': '--..', ' ': ' ', '0': '-----',
  '1': '.----', '2': '..---', '3': '...--', '4': '....-', '5': '.....',
  '6': '-....', '7': '--...', '8': '---..', '9': '----.',
  '&': '.-...', "'": '.----.', '@': '.--.-.', ')': '-.--.-', '(': '-.--.',
  ':': '---...', ',': '--..--', '=': '-...-', '!': '-.-.--', '.': '.-.-.-',
  '-': '-....-', '+': '.-.-.', '"': '.-..-.', '?': '..--..', '/': '-..-.'
    }

def write_in_morse (text, dic):
    text_upp = text.upper()
    translate_text = []
    for i in text_upp:
        translate_text.append(dic[i])
    print(' '.join(translate_text))


text = input('Введите текст на английском языке: ')
write_in_morse(text, char_to_dots)

