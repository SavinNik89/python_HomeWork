
from itertools import combinations
import random

# 1.	Дан список чисел. Создать список, в который попадают числа, описываемые возрастающую последовательность.
# Пример: [1, 5, 2, 3, 4, 6, 1, 7] => [1, 2, 3] или [1, 7] или [1, 6, 7] и т.д. Порядок элементов менять нельзя
#
# Для тех, кто только сейчас видит этот файл, вместо 1 задачи:
# Дан список чисел. Создать список в который попадают числа, описывающие возрастающую последовательность и содержащие
# максимальное количество элементов.
# Пример: [1, 5, 2, 3, 4, 6, 1, 7] => [1, 2, 3, 4, 6, 7]
#  [5, 2, 3, 4, 6, 1, 7] => [2, 3, 4, 6, 7]
#  Порядок элементов менять нельзя

print('****************************Задача № 1***************************')

numb_list = [1, 4, 2, 3, 9, 5, 6]
print(f'Входящая последовательность: {numb_list}')
len_comb = len(numb_list)
result = []
while len_comb > 0:
    combi_list = list(combinations(numb_list, len_comb))
    # print(combi_list)
    for i in combi_list:
        count = 0
        for j in range(1, len(i)):
            if i[j] < i[j-1]:
                count += 1
        if count == 0:
            result.append(i)
    if len(result) == 0:
        len_comb -= 1
    else:
        print(f'Самая большая возрастающая последовательность: {result[0]}')
        break


# 2. Создать и заполнить файл случайными целыми значениями. Выполнить сортировку содержимого файла по возрастанию.

print('****************************Задача № 2***************************')

rand_list = []
for n in range(1, 20):
    rand_list.append(str(random.randint(1, 100)))
file = open('new_file.txt', 'w')
file.write(' '.join(rand_list)+'\n')
file.close()
with open('new_file.txt', 'r+') as f:
    text = f.read()
    items = list(map(int, text.split(' ')))
    sort_list = sorted(items)
    str_list = ' '.join(list(map(str, sort_list)))
    f.write(str_list)
file = open('new_file.txt', 'r')
result = file.read()
print(result)

# 3.	Вот вам файл с тысячей чисел. https://cloud.mail.ru/public/DQgN/LqoQzPEec
# Задача: найти триплеты и просто выводить их на экран. Триплетом называются три числа, которые в сумме дают 0.
# (решение будет долгим, ибо является демонстрационным при теме многопоточного программирования).

print('****************************Задача № 3***************************')


def findTriplets(arr, n):
    found = False
    arr.sort()
    for i in range(0, n - 1):
        left = i + 1
        right = n - 1
        x = arr[i]
        while (left < right):
            if (x + arr[left] + arr[right] == 0):
                # печатать элементы, если их сумма равна нулю
                print(x, arr[left], arr[right])
                left += 1
                right -= 1
                found = True
            # Если сумма трех элементов меньше
            # чем ноль, то увеличение влево
            elif (x + arr[left] + arr[right] < 0):
                left += 1
            # если сумма больше нуля, чем
            # уменьшение в правой части
            else:

                right -= 1
    if (found == False):
        print("No Triplet Found")


file = open('1Kints.txt', 'r')
array = [int(row.strip()) for row in file]
findTriplets(array, len(array)-1)



# Экстра-задачи:
# 1.	Давайте представим, что ваша компания только что наняла вашего друга из колледжа и заплатила вам реферальный бонус. Потрясающе! Чтобы отпраздновать, вы берете свою команду в очень странный бар по соседству и используете реферальный бонус, чтобы купить и построить самую большую трехмерную пирамиду из пивных банок, которую вы можете.
# Пирамида пивных банок будет квадратировать количество банок на каждом уровне - 1 банка на верхнем уровне, 4 на втором, 9_seminar на следующем, 16, 25...
# Определите функцию beeramid, чтобы вернуть количество полных уровней пирамиды пивных банок, которую вы можете сделать, учитывая параметры: реферальный бонус и цена пивной банки.
# Например:
# beeramid(1500, 2)# 12
# beeramid(5000, 3)# 16

print('****************************Экстра № 1***************************')

# не решалась

# 2.	Создать функцию, которая из списка чисел возвращает число, являющее суммой двух или нескольких других элементов, либо возвращающее None, если такого числа нет.

print('****************************Экстра № 2***************************')

# не решалась

# 3.	Вот вам задача: https://cloud.mail.ru/public/7X6f/PXza5yoTP
# Вам помогут знания со второй лекции. Решение в лоб (скопировать число, вставить в переменную, сделать из нее список с числами) – слабо подойдет. Подумайте, как то, что было в лекции, вяжется с этой задачей.

print('****************************Экстра № 3***************************')

# не решалась